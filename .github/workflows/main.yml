name: CI/CD Pipeline for Deployment

on:
  push:
    branches:
      - main

jobs:
  dockerize:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      # Set Docker image as environment variable
      - name: Set Docker Image Env
        run: echo "DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/my-app:latest" >> $GITHUB_ENV

  deploy:
    name: Deploy Application with Terraform
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Apply Terraform Configuration
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -var "docker_image=$DOCKER_IMAGE"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
